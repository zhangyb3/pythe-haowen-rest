<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pythe.mapper.TblUserMapper" >
  <resultMap id="BaseResultMap" type="com.pythe.pojo.TblUser" >
    <id column="userId" property="userid" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="userImg" property="userimg" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phoneNum" property="phonenum" jdbcType="VARCHAR" />
    <result column="favorite" property="favorite" jdbcType="VARCHAR" />
    <result column="gradeId" property="gradeid" jdbcType="INTEGER" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="openId" property="openid" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="subjectId" property="subjectid" jdbcType="INTEGER" />
    <result column="popularity" property="popularity" jdbcType="VARCHAR" />
    <result column="organizationId" property="organizationid" jdbcType="BIGINT" />
    <result column="solved" property="solved" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pythe.pojo.TblUserWithBLOBs" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
    <result column="collection" property="collection" jdbcType="LONGVARCHAR" />
    <result column="complaintList" property="complaintlist" jdbcType="LONGVARCHAR" />
    <result column="knowledgeSpace" property="knowledgespace" jdbcType="LONGVARCHAR" />
    <result column="masterKnowledge" property="masterknowledge" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userId, username, userImg, password, phoneNum, favorite, gradeId, created, updated, 
    openId, status, subjectId, popularity, organizationId, solved
  </sql>
  <sql id="Blob_Column_List" >
    description, collection, complaintList, knowledgeSpace, masterKnowledge
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.pythe.pojo.TblUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pythe.pojo.TblUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_user
    where userId = #{userid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tbl_user
    where userId = #{userid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pythe.pojo.TblUserExample" >
    delete from tbl_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pythe.pojo.TblUserWithBLOBs" >
    <selectKey keyProperty="userid" order="AFTER" resultType="java.lang.Long">
	     select LAST_INSERT_ID()
	</selectKey>
    insert into tbl_user (userId, username, userImg, 
      password, phoneNum, favorite, 
      gradeId, created, updated, 
      openId, status, subjectId, 
      popularity, organizationId, solved, 
      description, collection, complaintList, 
      knowledgeSpace, masterKnowledge
      )
    values (#{userid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{userimg,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phonenum,jdbcType=VARCHAR}, #{favorite,jdbcType=VARCHAR}, 
      #{gradeid,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, 
      #{openid,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{subjectid,jdbcType=INTEGER}, 
      #{popularity,jdbcType=VARCHAR}, #{organizationid,jdbcType=BIGINT}, #{solved,jdbcType=VARCHAR}, 
      #{description,jdbcType=LONGVARCHAR}, #{collection,jdbcType=LONGVARCHAR}, #{complaintlist,jdbcType=LONGVARCHAR}, 
      #{knowledgespace,jdbcType=LONGVARCHAR}, #{masterknowledge,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pythe.pojo.TblUserWithBLOBs" >
    insert into tbl_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="userimg != null" >
        userImg,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phonenum != null" >
        phoneNum,
      </if>
      <if test="favorite != null" >
        favorite,
      </if>
      <if test="gradeid != null" >
        gradeId,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="openid != null" >
        openId,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="subjectid != null" >
        subjectId,
      </if>
      <if test="popularity != null" >
        popularity,
      </if>
      <if test="organizationid != null" >
        organizationId,
      </if>
      <if test="solved != null" >
        solved,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="collection != null" >
        collection,
      </if>
      <if test="complaintlist != null" >
        complaintList,
      </if>
      <if test="knowledgespace != null" >
        knowledgeSpace,
      </if>
      <if test="masterknowledge != null" >
        masterKnowledge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userimg != null" >
        #{userimg,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null" >
        #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="favorite != null" >
        #{favorite,jdbcType=VARCHAR},
      </if>
      <if test="gradeid != null" >
        #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="subjectid != null" >
        #{subjectid,jdbcType=INTEGER},
      </if>
      <if test="popularity != null" >
        #{popularity,jdbcType=VARCHAR},
      </if>
      <if test="organizationid != null" >
        #{organizationid,jdbcType=BIGINT},
      </if>
      <if test="solved != null" >
        #{solved,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="collection != null" >
        #{collection,jdbcType=LONGVARCHAR},
      </if>
      <if test="complaintlist != null" >
        #{complaintlist,jdbcType=LONGVARCHAR},
      </if>
      <if test="knowledgespace != null" >
        #{knowledgespace,jdbcType=LONGVARCHAR},
      </if>
      <if test="masterknowledge != null" >
        #{masterknowledge,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pythe.pojo.TblUserExample" resultType="java.lang.Integer" >
    select count(*) from tbl_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tbl_user
    <set >
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.userimg != null" >
        userImg = #{record.userimg,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenum != null" >
        phoneNum = #{record.phonenum,jdbcType=VARCHAR},
      </if>
      <if test="record.favorite != null" >
        favorite = #{record.favorite,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeid != null" >
        gradeId = #{record.gradeid,jdbcType=INTEGER},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.openid != null" >
        openId = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.subjectid != null" >
        subjectId = #{record.subjectid,jdbcType=INTEGER},
      </if>
      <if test="record.popularity != null" >
        popularity = #{record.popularity,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationid != null" >
        organizationId = #{record.organizationid,jdbcType=BIGINT},
      </if>
      <if test="record.solved != null" >
        solved = #{record.solved,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.collection != null" >
        collection = #{record.collection,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.complaintlist != null" >
        complaintList = #{record.complaintlist,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.knowledgespace != null" >
        knowledgeSpace = #{record.knowledgespace,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.masterknowledge != null" >
        masterKnowledge = #{record.masterknowledge,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update tbl_user
    set userId = #{record.userid,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      userImg = #{record.userimg,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      phoneNum = #{record.phonenum,jdbcType=VARCHAR},
      favorite = #{record.favorite,jdbcType=VARCHAR},
      gradeId = #{record.gradeid,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      openId = #{record.openid,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      subjectId = #{record.subjectid,jdbcType=INTEGER},
      popularity = #{record.popularity,jdbcType=VARCHAR},
      organizationId = #{record.organizationid,jdbcType=BIGINT},
      solved = #{record.solved,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR},
      collection = #{record.collection,jdbcType=LONGVARCHAR},
      complaintList = #{record.complaintlist,jdbcType=LONGVARCHAR},
      knowledgeSpace = #{record.knowledgespace,jdbcType=LONGVARCHAR},
      masterKnowledge = #{record.masterknowledge,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tbl_user
    set userId = #{record.userid,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      userImg = #{record.userimg,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      phoneNum = #{record.phonenum,jdbcType=VARCHAR},
      favorite = #{record.favorite,jdbcType=VARCHAR},
      gradeId = #{record.gradeid,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      openId = #{record.openid,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      subjectId = #{record.subjectid,jdbcType=INTEGER},
      popularity = #{record.popularity,jdbcType=VARCHAR},
      organizationId = #{record.organizationid,jdbcType=BIGINT},
      solved = #{record.solved,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pythe.pojo.TblUserWithBLOBs" >
    update tbl_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userimg != null" >
        userImg = #{userimg,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null" >
        phoneNum = #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="favorite != null" >
        favorite = #{favorite,jdbcType=VARCHAR},
      </if>
      <if test="gradeid != null" >
        gradeId = #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="openid != null" >
        openId = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="subjectid != null" >
        subjectId = #{subjectid,jdbcType=INTEGER},
      </if>
      <if test="popularity != null" >
        popularity = #{popularity,jdbcType=VARCHAR},
      </if>
      <if test="organizationid != null" >
        organizationId = #{organizationid,jdbcType=BIGINT},
      </if>
      <if test="solved != null" >
        solved = #{solved,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="collection != null" >
        collection = #{collection,jdbcType=LONGVARCHAR},
      </if>
      <if test="complaintlist != null" >
        complaintList = #{complaintlist,jdbcType=LONGVARCHAR},
      </if>
      <if test="knowledgespace != null" >
        knowledgeSpace = #{knowledgespace,jdbcType=LONGVARCHAR},
      </if>
      <if test="masterknowledge != null" >
        masterKnowledge = #{masterknowledge,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pythe.pojo.TblUserWithBLOBs" >
    update tbl_user
    set username = #{username,jdbcType=VARCHAR},
      userImg = #{userimg,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phoneNum = #{phonenum,jdbcType=VARCHAR},
      favorite = #{favorite,jdbcType=VARCHAR},
      gradeId = #{gradeid,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      openId = #{openid,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      subjectId = #{subjectid,jdbcType=INTEGER},
      popularity = #{popularity,jdbcType=VARCHAR},
      organizationId = #{organizationid,jdbcType=BIGINT},
      solved = #{solved,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR},
      collection = #{collection,jdbcType=LONGVARCHAR},
      complaintList = #{complaintlist,jdbcType=LONGVARCHAR},
      knowledgeSpace = #{knowledgespace,jdbcType=LONGVARCHAR},
      masterKnowledge = #{masterknowledge,jdbcType=LONGVARCHAR}
    where userId = #{userid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pythe.pojo.TblUser" >
    update tbl_user
    set username = #{username,jdbcType=VARCHAR},
      userImg = #{userimg,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phoneNum = #{phonenum,jdbcType=VARCHAR},
      favorite = #{favorite,jdbcType=VARCHAR},
      gradeId = #{gradeid,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      openId = #{openid,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      subjectId = #{subjectid,jdbcType=INTEGER},
      popularity = #{popularity,jdbcType=VARCHAR},
      organizationId = #{organizationid,jdbcType=BIGINT},
      solved = #{solved,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=BIGINT}
  </update>
</mapper>