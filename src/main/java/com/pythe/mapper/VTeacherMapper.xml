<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pythe.mapper.VTeacherMapper" >
  <resultMap id="BaseResultMap" type="com.pythe.pojo.VTeacher" >
    <result column="userId" property="userid" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="solved" property="solved" jdbcType="VARCHAR" />
    <result column="userImg" property="userimg" jdbcType="VARCHAR" />
    <result column="phoneNum" property="phonenum" jdbcType="VARCHAR" />
    <result column="openId" property="openid" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="subjectId" property="subjectid" jdbcType="INTEGER" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="popularity" property="popularity" jdbcType="VARCHAR" />
    <result column="organizationId" property="organizationid" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pythe.pojo.VTeacherWithBLOBs" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
    <result column="collection" property="collection" jdbcType="LONGVARCHAR" />
    <result column="masterKnowledge" property="masterknowledge" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userId, username, solved, userImg, phoneNum, openId, status, subjectId, subject, 
    popularity, organizationId
  </sql>
  <sql id="Blob_Column_List" >
    description, collection, masterKnowledge
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.pythe.pojo.VTeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from v_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pythe.pojo.VTeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from v_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.pythe.pojo.VTeacherExample" >
    delete from v_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pythe.pojo.VTeacherWithBLOBs" >
    insert into v_teacher (userId, username, solved, 
      userImg, phoneNum, openId, 
      status, subjectId, subject, 
      popularity, organizationId, description, 
      collection, masterKnowledge)
    values (#{userid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{solved,jdbcType=VARCHAR}, 
      #{userimg,jdbcType=VARCHAR}, #{phonenum,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{subjectid,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, 
      #{popularity,jdbcType=VARCHAR}, #{organizationid,jdbcType=BIGINT}, #{description,jdbcType=LONGVARCHAR}, 
      #{collection,jdbcType=LONGVARCHAR}, #{masterknowledge,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pythe.pojo.VTeacherWithBLOBs" >
    insert into v_teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="solved != null" >
        solved,
      </if>
      <if test="userimg != null" >
        userImg,
      </if>
      <if test="phonenum != null" >
        phoneNum,
      </if>
      <if test="openid != null" >
        openId,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="subjectid != null" >
        subjectId,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="popularity != null" >
        popularity,
      </if>
      <if test="organizationid != null" >
        organizationId,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="collection != null" >
        collection,
      </if>
      <if test="masterknowledge != null" >
        masterKnowledge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="solved != null" >
        #{solved,jdbcType=VARCHAR},
      </if>
      <if test="userimg != null" >
        #{userimg,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null" >
        #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="subjectid != null" >
        #{subjectid,jdbcType=INTEGER},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="popularity != null" >
        #{popularity,jdbcType=VARCHAR},
      </if>
      <if test="organizationid != null" >
        #{organizationid,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="collection != null" >
        #{collection,jdbcType=LONGVARCHAR},
      </if>
      <if test="masterknowledge != null" >
        #{masterknowledge,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pythe.pojo.VTeacherExample" resultType="java.lang.Integer" >
    select count(*) from v_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update v_teacher
    <set >
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.solved != null" >
        solved = #{record.solved,jdbcType=VARCHAR},
      </if>
      <if test="record.userimg != null" >
        userImg = #{record.userimg,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenum != null" >
        phoneNum = #{record.phonenum,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null" >
        openId = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.subjectid != null" >
        subjectId = #{record.subjectid,jdbcType=INTEGER},
      </if>
      <if test="record.subject != null" >
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.popularity != null" >
        popularity = #{record.popularity,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationid != null" >
        organizationId = #{record.organizationid,jdbcType=BIGINT},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.collection != null" >
        collection = #{record.collection,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.masterknowledge != null" >
        masterKnowledge = #{record.masterknowledge,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update v_teacher
    set userId = #{record.userid,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      solved = #{record.solved,jdbcType=VARCHAR},
      userImg = #{record.userimg,jdbcType=VARCHAR},
      phoneNum = #{record.phonenum,jdbcType=VARCHAR},
      openId = #{record.openid,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      subjectId = #{record.subjectid,jdbcType=INTEGER},
      subject = #{record.subject,jdbcType=VARCHAR},
      popularity = #{record.popularity,jdbcType=VARCHAR},
      organizationId = #{record.organizationid,jdbcType=BIGINT},
      description = #{record.description,jdbcType=LONGVARCHAR},
      collection = #{record.collection,jdbcType=LONGVARCHAR},
      masterKnowledge = #{record.masterknowledge,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update v_teacher
    set userId = #{record.userid,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      solved = #{record.solved,jdbcType=VARCHAR},
      userImg = #{record.userimg,jdbcType=VARCHAR},
      phoneNum = #{record.phonenum,jdbcType=VARCHAR},
      openId = #{record.openid,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      subjectId = #{record.subjectid,jdbcType=INTEGER},
      subject = #{record.subject,jdbcType=VARCHAR},
      popularity = #{record.popularity,jdbcType=VARCHAR},
      organizationId = #{record.organizationid,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>